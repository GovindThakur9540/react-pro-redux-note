{"version":3,"sources":["Action.js","components/Form.jsx","components/DisplayComponent.jsx","App.js","Reducer.js","Store.js","index.js"],"names":["ADD","REMOVE","Form","dispatch","useDispatch","FormSubmit","e","preventDefault","title","target","value","content","console","log","type","addNote","className","onSubmit","name","Display","notes","useSelector","state","NoteReducer","map","note","index","onClick","id","App","initialState","rootReducer","combineReducers","action","filter","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAAaA,EAAM,MACNC,EAAS,S,WCGP,SAASC,IACpB,IAAMC,EAAWC,cAEXC,EAAa,SAACC,GAChBA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,OAAOD,MAAME,MACvBC,EAAUL,EAAEG,OAAOE,QAAQD,MACjCP,EDPD,SAAiBK,EAAOG,GAE3B,OADAC,QAAQC,IAAI,SAAUL,EAAOG,GACvB,CACFG,KAAMd,EACNQ,MAAMA,EACNG,QAAQA,GCECI,CAAQP,EAAOG,IACxBL,EAAEG,OAAOD,MAAME,MAASJ,EAAEG,OAAOE,QAAQD,MAAQ,IAGrD,OACI,qCACA,sBAAKM,UAAU,iBAAf,UACI,qBAAKA,UAAU,eAAf,sBAGA,uBAAMA,UAAU,OAAOC,SAAU,SAACX,GAAD,OAAOD,EAAWC,IAAnD,UACI,uBAAOU,UAAU,aAAjB,qBACA,uBAAOF,KAAK,OAAOI,KAAK,UACxB,uBAAOF,UAAU,aAAjB,uBACA,uBAAOF,KAAK,OAAOE,UAAU,eAAeE,KAAK,YACjD,wBAAQJ,KAAK,SAASE,UAAU,cAAhC,4BAGR,oBAAIA,UAAU,YCzBP,SAASG,IACpB,IAAMC,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,YAAYH,SAC/CjB,EAAWC,cA2BjB,OACI,gCACI,qBAAKY,UAAU,kBAAf,uBAGA,8BA5BDI,GAAS,GAEJ,0DAMMA,EAAMI,KAAI,SAACC,EAAMC,GAAP,OAChB,sBAAiBV,UAAY,oBAA7B,UACI,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,gBAAf,SAAgCS,EAAKjB,QACrC,wBAAQQ,UAAU,IAAIW,QAAS,kBAAMxB,EFPnD,CACFW,KAAKb,EACL2B,GEKyEF,KAAzD,kBAGJ,8BAAMD,EAAKd,YANLe,W,MCHXG,MAZf,WACE,OACE,gCACE,qBAAKb,UAAU,UAAf,2BAGA,cAACd,EAAD,IACA,cAACiB,EAAD,Q,OCRAW,EAAc,CAChBV,MAAO,I,WCGIW,EAJKC,YAAgB,CAChCT,YDGW,WAAmD,IAA9BD,EAA6B,uDAArBQ,EAAcG,EAAO,uCAE7D,OAAOA,EAAOnB,MACV,KAAKd,EACD,MAAM,CACFoB,MAAM,GAAD,mBAAKE,EAAMF,OAAX,CACL,CACIZ,MAAOyB,EAAOzB,MACdG,QAASsB,EAAOtB,YAI5B,KAAKV,EACD,MAAM,CACFmB,MAAOE,EAAMF,MAAMc,QAAO,SAACT,EAAKC,GAAN,OAAgBA,IAAUO,EAAOL,OAGnE,QACI,OAAON,MEjBba,EAAQC,YAAYL,GAG1BM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJK,SAASC,eAAe,W","file":"static/js/main.97df6bd7.chunk.js","sourcesContent":["export const ADD = 'ADD';\nexport const REMOVE = 'REMOVE';\n\n// for adding title and content to add note\nexport function addNote(title, content){\n    console.log('action', title, content);\n    return{\n        type: ADD,\n        title:title,\n        content:content\n    }\n}\n\n//delete notes of particular id from All notes\nexport function removeNote(id){\n    return{\n        type:REMOVE,\n        id:id,\n    }\n}","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport {addNote} from '../Action';\n\nexport default function Form(){\n    const dispatch = useDispatch();\n\n    const FormSubmit = (e) =>{\n        e.preventDefault();\n        const title = e.target.title.value;\n        const content = e.target.content.value;\n        dispatch(addNote(title, content));\n        e.target.title.value =  e.target.content.value = '';\n    }\n\n    return(\n        <>\n        <div className=\"form-container\">\n            <div className=\"form-heading\">\n                Add Note\n            </div>\n            <form className=\"form\" onSubmit={(e) => FormSubmit(e)}>\n                <label className=\"form-label\">Title :</label>\n                <input type=\"text\" name=\"title\"/>\n                <label className=\"form-label\">Content :</label>\n                <input type=\"text\" className=\"form-content\" name=\"content\"/>\n                <button type=\"submit\" className=\"form-button\">Add Note</button>\n            </form>\n        </div>\n        <hr className=\"line\"/>\n        </>\n    )\n}","import React from 'react'\nimport {useSelector, useDispatch} from 'react-redux';\nimport {removeNote} from '../Action'\n\nexport default function Display(){\n    const notes = useSelector(state => state.NoteReducer.notes);\n    const dispatch = useDispatch();\n\n    const renderNotes = () => {\n        let mapRows;\n        if(notes == []){\n            mapRows = (\n                <>\n                    No Notes added yet\n                </>\n            )\n        }\n        else{\n            mapRows = notes.map((note, index) =>(\n                <div key={index} className = \"display-container\">\n                    <div className=\"display-title-x\">\n                        <div className=\"display-title\">{note.title}</div>\n                        <button className=\"x\" onClick={() => dispatch(removeNote(index))}>x</button>\n\n                    </div>\n                    <div>{note.content}</div>\n\n                </div>\n            ));\n        }\n        return mapRows;\n    }\n\n    return(\n        <div>\n            <div className=\"display-heading\">\n                All Notes\n            </div>\n            <div>\n                {renderNotes()}\n            </div>\n        </div>\n    )\n}","import Form from './components/Form';\nimport Display from './components/DisplayComponent';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <div className=\"heading\">\n        ProGrad Notes\n      </div>\n      <Form />\n      <Display />\n    </div>\n  );\n}\n\nexport default App;\n","import {ADD} from './Action';\nimport {REMOVE} from './Action';\n\nconst initialState ={\n    notes: []\n}\n\nexport default function NoteReducer(state = initialState, action){\n\n    switch(action.type){\n        case ADD:\n            return{\n                notes:[...state.notes,\n                {\n                    title: action.title,\n                    content: action.content\n                }]\n            }\n\n        case REMOVE:\n            return{\n                notes: state.notes.filter((note,index) => index !== action.id)\n            };\n\n        default:\n            return state;\n    }\n}","import NoteReducer from './Reducer';\nimport {combineReducers} from 'redux'\n\nconst rootReducer = combineReducers({\n    NoteReducer:NoteReducer\n})\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport rootReducer from './Store';\nimport {Provider} from 'react-redux'\nimport {createStore} from 'redux';\n\nconst store = createStore(rootReducer);\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}